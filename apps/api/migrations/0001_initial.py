# Generated by Django 3.2.15 on 2022-11-04 22:43

import apps.general.mixins
import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyRequestAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('path', models.CharField(max_length=500)),
                ('is_excel', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Company requested',
                'verbose_name_plural': 'Companies requested',
                'db_table': 'api_companies_requested',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='Endpoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250)),
                ('slug', models.CharField(blank=True, max_length=250)),
                ('url', models.CharField(blank=True, max_length=250)),
                ('order', models.IntegerField(default=0)),
                ('description', models.TextField(blank=True, default='')),
                ('url_example', models.CharField(blank=True, max_length=250)),
                ('response_example', ckeditor.fields.RichTextField(blank=True, default='')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('is_deprecated', models.BooleanField(default=False)),
                ('version', models.CharField(blank=True, default='v1', max_length=3)),
                ('date_deprecated', models.DateTimeField(blank=True, null=True)),
                ('price', models.IntegerField(default=0)),
                ('response_example_json', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Endpoint',
                'verbose_name_plural': 'Endpoints',
                'db_table': 'api_endpoints',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='EndpointsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('order', models.IntegerField(default=0)),
                ('icon', models.CharField(max_length=250)),
            ],
            options={
                'verbose_name': 'Endpoints category',
                'verbose_name_plural': 'Endpoints categories',
                'db_table': 'api_endpoints_categories',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Key',
            fields=[
                ('ip', models.CharField(blank=True, max_length=50, null=True)),
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('in_use', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('removed', models.DateTimeField(blank=True, null=True, verbose_name='Removed')),
                ('limit', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Key',
                'verbose_name_plural': 'Keys',
                'db_table': 'api_keys',
                'ordering': ['-created'],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='ReasonKeyRequested',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Reason for requesting Key',
                'verbose_name_plural': 'Reason for requesting Key',
                'db_table': 'api_reason_key',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='SuperinvestorRequestAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('path', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Superinvestor requested',
                'verbose_name_plural': 'Superinvestors requested',
                'db_table': 'api_superinvestor_requested',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='TermRequestAPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('path', models.CharField(max_length=500)),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.key')),
            ],
            options={
                'verbose_name': 'Term requested',
                'verbose_name_plural': 'Terms requested',
                'db_table': 'api_terms_requested',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
    ]
