# Generated by Django 3.2.12 on 2022-03-05 00:06

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
        ('emailing', '0002_initial'),
        ('seo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PublicBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=99999, null=True)),
                ('slug', models.CharField(blank=True, max_length=99999, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_votes', models.IntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('times_shared', models.PositiveIntegerField(default=0)),
                ('resume', models.TextField(default='')),
                ('published_at', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Publicado'), (2, 'Borrador'), (3, 'Programado'), (4, 'Necesita revisi√≥n')], null=True)),
                ('thumbnail', models.ImageField(blank=True, height_field='image_height', null=True, upload_to='', verbose_name='image', width_field='image_width')),
                ('send_as_newsletter', models.BooleanField(default=False)),
                ('content', ckeditor.fields.RichTextField()),
                ('non_thumbnail_url', models.CharField(blank=True, max_length=99999, null=True)),
                ('in_text_image', models.BooleanField(default=False)),
                ('has_been_scheduled', models.BooleanField(default=False)),
                ('published_correctly', models.BooleanField(default=False)),
                ('publishing_date', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='general.category')),
                ('downvotes', models.ManyToManyField(blank=True, related_name='user_downvote_blog', to=settings.AUTH_USER_MODEL)),
                ('meta_information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='seo.metaparametershistorial')),
                ('tags', models.ManyToManyField(blank=True, to='general.Tag')),
                ('upvotes', models.ManyToManyField(blank=True, related_name='user_upvote_blog', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog de usuario',
                'db_table': 'blog_post',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='WritterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('host_name', models.CharField(blank=True, max_length=100000, null=True, unique=True)),
                ('long_description', ckeditor.fields.RichTextField(default='')),
                ('facebook', models.CharField(blank=True, max_length=100000, null=True)),
                ('twitter', models.CharField(blank=True, max_length=100000, null=True)),
                ('insta', models.CharField(blank=True, max_length=100000, null=True)),
                ('youtube', models.CharField(blank=True, max_length=100000, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=100000, null=True)),
                ('tiktok', models.CharField(blank=True, max_length=100000, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='writter_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User writter profile',
                'db_table': 'writter_profile',
            },
        ),
        migrations.CreateModel(
            name='PublicBlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('content_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_related', to='public_blog.publicblog')),
            ],
            options={
                'verbose_name': "Blog's comment",
                'db_table': 'blog_comments',
            },
        ),
        migrations.CreateModel(
            name='PublicBlogAsNewsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_default_title', models.BooleanField(default=False)),
                ('use_default_introduction', models.BooleanField(default=False)),
                ('use_default_despedida', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=99999)),
                ('introduction', models.TextField()),
                ('despedida', models.TextField()),
                ('content', ckeditor.fields.RichTextField()),
                ('blog_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='public_blog_newsletter', to='public_blog.publicblog')),
                ('default_despedida', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailing.newsletterdefaultdespedida')),
                ('default_introduction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailing.newsletterdefaultintroduction')),
                ('default_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='emailing.newsletterdefaulttitle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('number_of_visits', models.PositiveBigIntegerField(default=0)),
                ('platform_shared', models.IntegerField(choices=[(1, 'Facebook'), (2, 'Twitter'), (3, 'Reddit'), (4, 'Whatsapp'), (5, 'Linkedin'), (6, 'Pinterest'), (7, 'Tumblr')])),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles_shared', to='public_blog.writterprofile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Proflie shared',
                'db_table': 'shared_profiles',
            },
        ),
        migrations.CreateModel(
            name='NewsletterFollowers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='main_writter_followed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Base de seguidores del blog',
                'db_table': 'writter_followers_newsletters',
            },
        ),
        migrations.CreateModel(
            name='FollowingHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_following', models.BooleanField(default=False)),
                ('stop_following', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user_followed', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_followed', to=settings.AUTH_USER_MODEL)),
                ('user_following', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Users following historial',
                'db_table': 'writter_followers_historial',
            },
        ),
        migrations.CreateModel(
            name='BlogSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('number_of_visits', models.PositiveBigIntegerField(default=0)),
                ('platform_shared', models.IntegerField(choices=[(1, 'Facebook'), (2, 'Twitter'), (3, 'Reddit'), (4, 'Whatsapp'), (5, 'Linkedin'), (6, 'Pinterest'), (7, 'Tumblr')])),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs_shared', to='public_blog.publicblog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog shared',
                'db_table': 'shared_blogs',
            },
        ),
    ]
