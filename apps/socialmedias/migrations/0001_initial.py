# Generated by Django 3.2.12 on 2022-04-29 22:07

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('escritos', '0004_delete_termsharedhistorial'),
        ('empresas', '0003_auto_20220415_0008'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('public_blog', '0004_auto_20220429_2207'),
        ('preguntas_respuestas', '0004_delete_questionsharedhistorial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DefaultTilte',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', ckeditor.fields.RichTextField(default='')),
            ],
            options={
                'verbose_name': 'Default titles',
                'db_table': 'socialmedia_titles',
            },
        ),
        migrations.CreateModel(
            name='Emoji',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emoji', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name': 'Default emojis',
                'db_table': 'socialmedia_emojis',
            },
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', ckeditor.fields.RichTextField(default='')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('is_trending', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Default hashtags',
                'db_table': 'socialmedia_hashtags',
            },
        ),
        migrations.CreateModel(
            name='TermSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='terms_shared', to='escritos.term')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Term shared',
                'db_table': 'shared_terms',
            },
        ),
        migrations.CreateModel(
            name='QuestionSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions_shared', to='preguntas_respuestas.question')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Question shared',
                'db_table': 'shared_questions',
            },
        ),
        migrations.CreateModel(
            name='ProfileSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profiles_shared', to='public_blog.writterprofile')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile shared',
                'db_table': 'shared_profiles',
            },
        ),
        migrations.CreateModel(
            name='NewsSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('company_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='news_shared', to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company news shared',
                'db_table': 'shared_news',
            },
        ),
        migrations.CreateModel(
            name='CompanySharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='company_shared', to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company shared',
                'db_table': 'shared_companies',
            },
        ),
        migrations.CreateModel(
            name='BlogSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('post_type', models.PositiveBigIntegerField(choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image'), (7, 'Shorts')])),
                ('platform_shared', models.CharField(choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=500)),
                ('social_id', models.CharField(max_length=500)),
                ('title', ckeditor.fields.RichTextField(blank=True)),
                ('description', ckeditor.fields.RichTextField(blank=True)),
                ('extra_description', ckeditor.fields.RichTextField(blank=True)),
                ('inside_information', ckeditor.fields.RichTextField(blank=True)),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs_shared', to='public_blog.publicblog')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog shared',
                'db_table': 'shared_blogs',
            },
        ),
    ]
