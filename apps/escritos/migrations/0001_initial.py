# Generated by Django 3.2.12 on 2022-03-05 00:07

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('seo', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=99999, null=True)),
                ('slug', models.CharField(blank=True, max_length=99999, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_votes', models.IntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('times_shared', models.PositiveIntegerField(default=0)),
                ('resume', models.TextField(default='')),
                ('published_at', models.DateTimeField(auto_now=True)),
                ('status', models.IntegerField(blank=True, choices=[(1, 'Publicado'), (2, 'Borrador'), (3, 'Programado'), (4, 'Necesita revisión')], null=True)),
                ('thumbnail', models.ImageField(blank=True, height_field='image_height', null=True, upload_to='', verbose_name='image', width_field='image_width')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='general.category')),
                ('downvotes', models.ManyToManyField(blank=True, related_name='user_downvote_term', to=settings.AUTH_USER_MODEL)),
                ('meta_information', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='seo.metaparametershistorial')),
                ('tags', models.ManyToManyField(blank=True, to='general.Tag')),
                ('upvotes', models.ManyToManyField(blank=True, related_name='user_upvote_term', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Término del glosario',
                'db_table': 'term',
            },
        ),
        migrations.CreateModel(
            name='TermContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=3000)),
                ('order', models.PositiveIntegerField(default=0)),
                ('content', ckeditor.fields.RichTextField()),
                ('term_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='escritos.term')),
            ],
            options={
                'verbose_name': 'Partes del término',
                'db_table': 'term_content',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TermsOldUrls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(blank=True, max_length=3000, null=True)),
                ('term_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='urls_related', to='escritos.term')),
            ],
            options={
                'verbose_name': "Term's old links",
                'db_table': 'term_old_links',
            },
        ),
        migrations.CreateModel(
            name='TermSharedHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_shared', models.DateTimeField(auto_now_add=True)),
                ('number_of_visits', models.PositiveBigIntegerField(default=0)),
                ('platform_shared', models.IntegerField(choices=[(1, 'Facebook'), (2, 'Twitter'), (3, 'Reddit'), (4, 'Whatsapp'), (5, 'Linkedin'), (6, 'Pinterest'), (7, 'Tumblr')])),
                ('content_shared', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='terms_shared', to='escritos.term')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Term shared',
                'db_table': 'shared_terms',
            },
        ),
        migrations.CreateModel(
            name='TermsComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('content_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_related', to='escritos.term')),
            ],
            options={
                'verbose_name': "Term's comment",
                'db_table': 'term_comments',
            },
        ),
        migrations.CreateModel(
            name='TermCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=3000, null=True)),
                ('date_suggested', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_approved', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(default=django.utils.timezone.now)),
                ('content', ckeditor.fields.RichTextField()),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='revisor', to=settings.AUTH_USER_MODEL)),
                ('reviwed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='corrector', to=settings.AUTH_USER_MODEL)),
                ('term_content_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='escritos.termcontent')),
            ],
            options={
                'verbose_name': 'Corrections terms',
                'db_table': 'term_content_correction',
                'ordering': ['id'],
            },
        ),
    ]
