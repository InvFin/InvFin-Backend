# Generated by Django 3.2.14 on 2022-07-25 20:52

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('general', '0007_period'),
        ('seo', '0011_auto_20220725_2252'),
        ('web', '0002_alter_websiteemail_title'),
    ]

    operations = [
        migrations.CreateModel(
            name='PromotionCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=600)),
                ('slug', models.SlugField(blank=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, to='general.Category')),
                ('tags', models.ManyToManyField(blank=True, to='general.Tag')),
            ],
            options={
                'verbose_name': 'Promotions campaigns',
                'db_table': 'promotions_campaigns',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=600)),
                ('content', ckeditor.fields.RichTextField()),
                ('thumbnail', models.CharField(blank=True, max_length=600)),
                ('slug', models.SlugField()),
                ('prize', models.PositiveBigIntegerField(default=0)),
                ('has_prize', models.BooleanField(default=False)),
                ('shareable_url', models.CharField(blank=True, max_length=600)),
                ('redirect_to', models.CharField(blank=True, max_length=600)),
                ('medium', models.CharField(blank=True, choices=[('ads', 'Ads'), ('email', 'Email'), ('invfin', 'Web'), ('social-media-posts', 'Social media posts')], max_length=250)),
                ('web_promotion_type', models.CharField(blank=True, choices=[('pop_up', 'Pop up'), ('banner', 'Big Banner'), ('lista', 'List'), ('solo', 'Solo')], max_length=250)),
                ('web_location', models.CharField(blank=True, choices=[('all-web', 'Toda la web'), ('web-inicio', 'Web Inicio'), ('screener-inicio', 'Screener Inicio'), ('screener-market', 'Screener Market'), ('screener-company', 'Screener Company'), ('cartera-inicio', 'Cartera Inicio'), ('cartera-financials', 'Cartera Financials'), ('cartera-balance', 'Cartera Balance'), ('private-profile', 'Private Profile'), ('public-profile', 'Public Profile'), ('question-inicio', 'Question Inicio'), ('question-details', 'Question Details'), ('term-inicio', 'Term Inicio'), ('term-details', 'Term Details'), ('blog-inicio', 'Blog Inicio'), ('blog-details', 'Blog Details')], max_length=250)),
                ('web_place', models.CharField(blank=True, choices=[('side', 'Side'), ('top', 'Top'), ('middle', 'Middle'), ('bottom', 'Bottom'), ('in_between', 'In between')], max_length=250)),
                ('social_media', models.CharField(blank=True, choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('instagram', 'Instagram')], max_length=250)),
                ('publication_date', models.DateTimeField(blank=True)),
                ('reuse', models.BooleanField(default=False)),
                ('times_to_reuse', models.PositiveBigIntegerField(default=0)),
                ('clicks_by_user', models.PositiveBigIntegerField(default=0)),
                ('clicks_by_not_user', models.PositiveBigIntegerField(default=0)),
                ('campaign_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='web.promotioncampaign')),
                ('users_clicked', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('visiteurs_clicked', models.ManyToManyField(blank=True, to='seo.Visiteur')),
            ],
            options={
                'verbose_name': 'Promociones',
                'db_table': 'promotions',
            },
        ),
    ]
