# Generated by Django 3.2.15 on 2022-11-04 20:21

import apps.general.mixins
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('promotions', '0002_initial'),
        ('content_creation', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WebsiteEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500)),
                ('sent', models.BooleanField(default=False)),
                ('date_to_send', models.DateTimeField(blank=True, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('whom_to_send', models.CharField(choices=[('all', 'All'), ('campaign_related', 'Campaign related'), ('selected', 'Selected')], default='all', max_length=800)),
                ('object_id', models.PositiveBigIntegerField(null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', to='promotions.campaign')),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('default_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content_creation.defaultcontent')),
                ('default_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content_creation.defaulttilte')),
                ('title_emojis', models.ManyToManyField(blank=True, to='content_creation.Emoji')),
                ('users_selected', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Website emails',
                'db_table': 'website_emails',
                'ordering': ['-id'],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteLegalPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=800)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('content', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Legal website page',
                'db_table': 'website_pages_legals',
                'ordering': ['-id'],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteEmailTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
                ('opened', models.BooleanField(default=False)),
                ('date_opened', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_related', to='web.websiteemail')),
                ('sent_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email counting',
                'db_table': 'website_emails_track',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
    ]
