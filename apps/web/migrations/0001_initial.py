# Generated by Django 3.2.15 on 2022-10-29 10:51

import apps.general.mixins
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('general', '0002_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('socialmedias', '0002_initial'),
        ('users', '0001_initial'),
        ('seo', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=600)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('focused_on', models.CharField(choices=[('promotion', 'Promotion'), ('suggestion', 'Suggestion'), ('announcement', 'Announcement'), ('welcome', 'Welcome'), ('engagement', 'Engagement'), ('newsletter', 'Newsletter')], max_length=250)),
                ('categories', models.ManyToManyField(blank=True, to='general.Category')),
                ('tags', models.ManyToManyField(blank=True, to='general.Tag')),
                ('users_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='users.userscategory')),
            ],
            options={
                'verbose_name': 'Campaign',
                'db_table': 'campaigns',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=500)),
                ('sent', models.BooleanField(default=False)),
                ('date_to_send', models.DateTimeField(blank=True, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('whom_to_send', models.CharField(choices=[('all', 'All'), ('campaign_related', 'Campaign related'), ('selected', 'Selected')], default='all', max_length=800)),
                ('object_id', models.PositiveBigIntegerField(null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', to='web.campaign')),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('default_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='socialmedias.defaultcontent')),
                ('default_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='socialmedias.defaulttilte')),
                ('title_emojis', models.ManyToManyField(blank=True, to='socialmedias.Emoji')),
                ('users_selected', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Website emails',
                'db_table': 'website_emails',
                'ordering': ['-id'],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteLegalPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=800)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('content', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Legal website page',
                'db_table': 'website_pages_legals',
                'ordering': ['-id'],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteEmailTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
                ('opened', models.BooleanField(default=False)),
                ('date_opened', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_related', to='web.websiteemail')),
                ('sent_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email counting',
                'db_table': 'website_emails_track',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=600)),
                ('content', ckeditor.fields.RichTextField()),
                ('thumbnail', models.CharField(blank=True, max_length=600)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('prize', models.PositiveBigIntegerField(default=0)),
                ('shareable_url', models.SlugField(blank=True, max_length=600)),
                ('redirect_to', models.SlugField(blank=True, max_length=600)),
                ('medium', models.CharField(choices=[('ads', 'Ads'), ('email', 'Email'), ('web', 'Web'), ('social-media-posts', 'Social media posts')], default='web', max_length=250)),
                ('web_promotion_style', models.CharField(blank=True, choices=[('pop_up', 'Pop up'), ('banner', 'Big Banner'), ('lista', 'List'), ('solo', 'Solo')], max_length=250)),
                ('web_location', models.CharField(blank=True, choices=[('all-web', 'Toda la web'), ('web-inicio', 'Web Inicio'), ('screener-inicio', 'Screener Inicio'), ('screener-market', 'Screener Market'), ('screener-company', 'Screener Company'), ('cartera-inicio', 'Cartera Inicio'), ('cartera-financials', 'Cartera Financials'), ('cartera-balance', 'Cartera Balance'), ('private-profile', 'Private Profile'), ('public-profile', 'Public Profile'), ('question-inicio', 'Question Inicio'), ('question-details', 'Question Details'), ('term-inicio', 'Term Inicio'), ('term-details', 'Term Details'), ('blog-inicio', 'Blog Inicio'), ('blog-details', 'Blog Details')], max_length=250)),
                ('web_place', models.CharField(blank=True, choices=[('side', 'Side'), ('top', 'Top'), ('middle', 'Middle'), ('bottom', 'Bottom'), ('in_between', 'In between')], max_length=250)),
                ('social_media', models.CharField(blank=True, choices=[('facebook', 'Facebook'), ('twitter', 'Twitter'), ('reddit', 'Reddit'), ('whatsapp', 'Whatsapp'), ('linkedin', 'Linkedin'), ('pinterest', 'Pinterest'), ('tumblr', 'Tumblr'), ('youtube', 'Youtube'), ('instagram', 'Instagram')], max_length=250)),
                ('publication_date', models.DateTimeField(blank=True)),
                ('reuse', models.BooleanField(default=False)),
                ('times_to_reuse', models.PositiveBigIntegerField(default=0)),
                ('clicks_by_user', models.PositiveBigIntegerField(default=0)),
                ('clicks_by_not_user', models.PositiveBigIntegerField(default=0)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promotions', to='web.campaign')),
                ('users_clicked', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('visiteurs_clicked', models.ManyToManyField(blank=True, to='seo.Visiteur')),
            ],
            options={
                'verbose_name': 'Promotion',
                'db_table': 'promotions',
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
    ]
