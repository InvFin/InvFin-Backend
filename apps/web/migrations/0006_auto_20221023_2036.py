# Generated by Django 3.2.16 on 2022-10-23 18:36

import apps.general.mixins
from django.conf import settings
from django.db import migrations, models
from apps.web.constants import CONTENT_PURPOSES


def populate_categories_users(apps, schema):
    for key, value in CONTENT_PURPOSES:
        WebsiteEmailsType = apps.get_model("web", "WebsiteEmailsType")
        UsersCategory = apps.get_model("web", "UsersCategory")
        web_email_type = WebsiteEmailsType.objects.create(name=value, slug=key)
        cat = UsersCategory.objects.create(name=value, slug=key)
        cat.email_type_related.add(web_email_type)


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("web", "0005_auto_20221017_2321"),
    ]

    operations = [
        migrations.CreateModel(
            name="UsersCategory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=800)),
                ("slug", models.SlugField(blank=True, max_length=800, null=True)),
                ("name_for_user", models.CharField(blank=True, max_length=800, null=True)),
                ("show_to_user", models.BooleanField(default=False)),
                (
                    "email_type_related",
                    models.ManyToManyField(blank=True, related_name="users_categories", to="web.WebsiteEmailsType"),
                ),
                ("users", models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                "verbose_name": "Users category",
                "db_table": "users_categories",
                "ordering": ["-id"],
            },
            bases=(models.Model, apps.general.mixins.BaseToAllMixin),
        ),
        migrations.DeleteModel(
            name="UserAndVisiteurCategory",
        ),
        migrations.RunPython(populate_categories_users, reverse_code=migrations.RunPython.noop),
    ]
