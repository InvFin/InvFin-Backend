# Generated by Django 3.2.12 on 2022-03-05 00:07

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('etfs', '0001_initial'),
        ('empresas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserScreenerSimplePrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('optimistic_growth', models.FloatField(blank=True, null=True)),
                ('neutral_growth', models.FloatField(blank=True, null=True)),
                ('pesimistic_growth', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predicciones de los usuarios',
                'verbose_name_plural': 'Predicciones de los usuarios',
                'db_table': 'users_screener_simple_predictions',
            },
        ),
        migrations.CreateModel(
            name='UserScreenerMediumPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('optimistic_growth', models.FloatField(blank=True, null=True)),
                ('neutral_growth', models.FloatField(blank=True, null=True)),
                ('pesimistic_growth', models.FloatField(blank=True, null=True)),
                ('optimistic_margin', models.FloatField(blank=True, null=True)),
                ('neutral_margin', models.FloatField(blank=True, null=True)),
                ('pesimistic_margin', models.FloatField(blank=True, null=True)),
                ('optimistic_buyback', models.FloatField(blank=True, null=True)),
                ('neutral_buyback', models.FloatField(blank=True, null=True)),
                ('pesimistic_buyback', models.FloatField(blank=True, null=True)),
                ('optimistic_per', models.FloatField(blank=True, null=True)),
                ('neutral_per', models.FloatField(blank=True, null=True)),
                ('pesimistic_per', models.FloatField(blank=True, null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Predicciones elaboradas de los usuarios',
                'db_table': 'users_screener_medium_predictions',
            },
        ),
        migrations.CreateModel(
            name='UserCompanyObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('observation', ckeditor.fields.RichTextField(default='')),
                ('observation_type', models.IntegerField(blank=True, choices=[(1, 'Fuerza'), (2, 'Oportunidad'), (3, 'Debilidad'), (4, 'Amenaza')], null=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_foda', to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Observaciones sobre la empresa',
                'db_table': 'users_screener_companies_observations',
            },
        ),
        migrations.CreateModel(
            name='FavoritesStocksList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock', models.ManyToManyField(blank=True, to='empresas.Company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='favorites_companies', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lista de acciones favoritas',
                'verbose_name_plural': 'Lista de acciones favoritas',
                'db_table': 'favorites_stocks_list',
            },
        ),
        migrations.CreateModel(
            name='FavoritesStocksHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('added', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='empresas.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Acción favorita',
                'verbose_name_plural': 'Acción favoritas',
                'db_table': 'favorites_stocks_historial',
            },
        ),
        migrations.CreateModel(
            name='FavoritesEtfsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etf', models.ManyToManyField(blank=True, to='etfs.Etf')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lista de ETF favoritas',
                'verbose_name_plural': 'Lista de ETF favoritas',
                'db_table': 'favorites_etfs_list',
            },
        ),
        migrations.CreateModel(
            name='FavoritesEtfsHistorial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('added', models.BooleanField(default=False)),
                ('removed', models.BooleanField(default=False)),
                ('asset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='etfs.etf')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ETF favorito',
                'verbose_name_plural': 'ETF favoritos',
                'db_table': 'favorites_etfs_historial',
            },
        ),
    ]
