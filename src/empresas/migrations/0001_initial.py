# Generated by Django 3.2.15 on 2022-11-04 22:43

import src.empresas.extensions.company
import src.empresas.extensions.finprep
import src.empresas.extensions.y_finance
import src.empresas.extensions.yahoo_query
import src.empresas.models.company
import src.general.mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("industries_sectors", "0001_initial"),
        ("currencies", "0001_initial"),
        ("countries", "0001_initial"),
        ("periods", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ticker", models.CharField(db_index=True, max_length=30, unique=True)),
                ("name", models.CharField(blank=True, max_length=700, null=True)),
                ("website", models.CharField(blank=True, max_length=250, null=True)),
                ("state", models.CharField(blank=True, max_length=250, null=True)),
                ("ceo", models.CharField(blank=True, max_length=250, null=True)),
                ("image", models.CharField(blank=True, max_length=250, null=True)),
                ("city", models.CharField(blank=True, max_length=250, null=True)),
                ("employees", models.CharField(blank=True, max_length=250, null=True)),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("zip_code", models.CharField(blank=True, max_length=250, null=True)),
                ("cik", models.CharField(blank=True, max_length=250, null=True)),
                ("cusip", models.CharField(blank=True, max_length=250, null=True)),
                ("isin", models.CharField(blank=True, max_length=250, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("ipoDate", models.CharField(blank=True, max_length=250, null=True)),
                ("beta", models.FloatField(blank=True, default=0, null=True)),
                ("is_trust", models.BooleanField(default=False)),
                ("last_div", models.FloatField(blank=True, default=0, null=True)),
                ("is_adr", models.BooleanField(default=False)),
                ("is_fund", models.BooleanField(default=False)),
                ("is_etf", models.BooleanField(default=False)),
                ("no_incs", models.BooleanField(default=False)),
                ("no_bs", models.BooleanField(default=False)),
                ("no_cfs", models.BooleanField(default=False)),
                ("description_translated", models.BooleanField(default=False)),
                ("has_logo", models.BooleanField(default=False)),
                ("updated", models.BooleanField(default=False)),
                ("last_update", models.DateTimeField(blank=True, null=True)),
                ("date_updated", models.BooleanField(default=False)),
                ("has_error", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("remote_image_imagekit", models.CharField(blank=True, default="", max_length=500)),
                ("remote_image_cloudinary", models.CharField(blank=True, default="", max_length=500)),
                ("checkings", models.JSONField(default=src.empresas.models.company.default_dict)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="countries.country"
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Company",
                "verbose_name_plural": "Companies",
                "db_table": "assets_companies",
                "ordering": ["ticker"],
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin, src.empresas.extensions.company.CompanyExtended),
        ),
        migrations.CreateModel(
            name="ExchangeOrganisation",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(blank=True, max_length=250, null=True)),
                ("image", models.CharField(blank=True, max_length=250, null=True)),
                ("sub_exchange1", models.CharField(blank=True, max_length=250, null=True)),
                ("sub_exchange2", models.CharField(blank=True, max_length=250, null=True)),
                ("order", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Organisation exchange",
                "verbose_name_plural": "Organisation exchanges",
                "db_table": "assets_exchanges_organisations",
            },
        ),
        migrations.CreateModel(
            name="InstitutionalOrganization",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "verbose_name": "Institutional Organization",
                "verbose_name_plural": "Institutional Organizations",
                "db_table": "assets_institutional_organizations",
            },
        ),
        migrations.CreateModel(
            name="TopInstitutionalOwnership",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("percentage_held", models.FloatField(blank=True, default=0, null=True)),
                ("position", models.FloatField(blank=True, default=0, null=True)),
                ("value", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="top_institutional_ownership",
                        to="empresas.company",
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="institution",
                        to="empresas.institutionalorganization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Top institutional owners",
                "verbose_name_plural": "Top institutional owners",
                "db_table": "assets_top_institutional_ownership",
                "ordering": ["-date"],
                "get_latest_by": "date",
            },
        ),
        migrations.CreateModel(
            name="StatementsFinnhub",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("financials", models.JSONField(default=dict)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
            ],
            options={
                "verbose_name": "Finnhub All Statements",
                "verbose_name_plural": "Finnhub All Statements",
                "db_table": "assets_companies_all_statements_finnhub",
            },
        ),
        migrations.CreateModel(
            name="RentabilityRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("roa", models.FloatField(blank=True, default=0, null=True)),
                ("roe", models.FloatField(blank=True, default=0, null=True)),
                ("roc", models.FloatField(blank=True, default=0, null=True)),
                ("roce", models.FloatField(blank=True, default=0, null=True)),
                ("rota", models.FloatField(blank=True, default=0, null=True)),
                ("roic", models.FloatField(blank=True, default=0, null=True)),
                ("nopat_roic", models.FloatField(blank=True, default=0, null=True)),
                ("rogic", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rentability_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Rentability Ratio",
                "verbose_name_plural": "Rentability Ratios",
                "db_table": "assets_companies_rentability_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="PriceToRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("price_book", models.FloatField(blank=True, default=0, null=True)),
                ("price_cf", models.FloatField(blank=True, default=0, null=True)),
                ("price_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("price_earnings_growth", models.FloatField(blank=True, default=0, null=True)),
                ("price_sales", models.FloatField(blank=True, default=0, null=True)),
                ("price_total_assets", models.FloatField(blank=True, default=0, null=True)),
                ("price_fcf", models.FloatField(blank=True, default=0, null=True)),
                ("price_operating_cf", models.FloatField(blank=True, default=0, null=True)),
                ("price_tangible_assets", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="price_to_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Price to Ratio",
                "verbose_name_plural": "Price to Ratios",
                "db_table": "assets_companies_price_to_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="PerShareValue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("sales_ps", models.FloatField(blank=True, default=0, null=True)),
                ("book_ps", models.FloatField(blank=True, default=0, null=True)),
                ("tangible_ps", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_ps", models.FloatField(blank=True, default=0, null=True)),
                ("eps", models.FloatField(blank=True, default=0, null=True)),
                ("cash_ps", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cf_ps", models.FloatField(blank=True, default=0, null=True)),
                ("capex_ps", models.FloatField(blank=True, default=0, null=True)),
                ("total_assets_ps", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="per_share_values",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Per share",
                "verbose_name_plural": "Per shares",
                "db_table": "assets_companies_per_share_value",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="OperationRiskRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("asset_coverage_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("cash_flow_coverage_ratios", models.FloatField(blank=True, default=0, null=True)),
                ("cash_coverage", models.FloatField(blank=True, default=0, null=True)),
                ("debt_service_coverage", models.FloatField(blank=True, default=0, null=True)),
                ("interest_coverage", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cashflow_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("debt_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt_to_capitalization", models.FloatField(blank=True, default=0, null=True)),
                ("total_debt_to_capitalization", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="operation_risks_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Operation Risk Ratio",
                "verbose_name_plural": "Operation Risk Ratios",
                "db_table": "assets_companies_operations_risk_ratio",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="NonGaap",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("normalized_income", models.FloatField(blank=True, default=0, null=True)),
                ("effective_tax_rate", models.FloatField(blank=True, default=0, null=True)),
                ("nopat", models.FloatField(blank=True, default=0, null=True)),
                ("net_working_cap", models.FloatField(blank=True, default=0, null=True)),
                ("average_inventory", models.FloatField(blank=True, default=0, null=True)),
                ("average_payables", models.FloatField(blank=True, default=0, null=True)),
                ("dividend_yield", models.FloatField(blank=True, default=0, null=True)),
                ("earnings_yield", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_yield", models.FloatField(blank=True, default=0, null=True)),
                ("income_quality", models.FloatField(blank=True, default=0, null=True)),
                ("invested_capital", models.FloatField(blank=True, default=0, null=True)),
                ("market_cap", models.FloatField(blank=True, default=0, null=True)),
                ("net_current_asset_value", models.FloatField(blank=True, default=0, null=True)),
                ("payout_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("tangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("retention_ratio", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="non_gaap_figures",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Non GAAP figure",
                "verbose_name_plural": "Non GAAP figures",
                "db_table": "assets_companies_non_gaap",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="MarginRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("gross_margin", models.FloatField(blank=True, default=0, null=True)),
                ("ebitda_margin", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_margin", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_margin", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_equity_to_net_income", models.FloatField(blank=True, default=0, null=True)),
                ("unlevered_fcf_to_net_income", models.FloatField(blank=True, default=0, null=True)),
                ("unlevered_fcf_ebit_to_net_income", models.FloatField(blank=True, default=0, null=True)),
                ("owners_earnings_to_net_income", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="margins",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Margin Ratio",
                "verbose_name_plural": "Margin Ratios",
                "db_table": "assets_companies_margins_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="LiquidityRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("cash_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("current_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("quick_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cashflow_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("debt_to_equity", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="liquidity_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Liquidity Ratio",
                "verbose_name_plural": "Liquidity Ratios",
                "db_table": "assets_companies_liquidity_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="KeyStatsYahooQuery",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("max_age", models.FloatField(blank=True, default=0, null=True)),
                ("price_hint", models.FloatField(blank=True, default=0, null=True)),
                ("enterprise_value", models.FloatField(blank=True, default=0, null=True)),
                ("forward_pe", models.FloatField(blank=True, default=0, null=True)),
                ("profit_margins", models.FloatField(blank=True, default=0, null=True)),
                ("float_shares", models.FloatField(blank=True, default=0, null=True)),
                ("shares_outstanding", models.FloatField(blank=True, default=0, null=True)),
                ("shares_short", models.FloatField(blank=True, default=0, null=True)),
                ("shares_short_prior_month", models.FloatField(blank=True, default=0, null=True)),
                ("shares_short_previous_month_date", models.DateTimeField(blank=True, null=True)),
                ("date_short_interest", models.DateTimeField(blank=True, null=True)),
                ("shares_percent_shares_out", models.FloatField(blank=True, default=0, null=True)),
                ("held_percent_insiders", models.FloatField(blank=True, default=0, null=True)),
                ("held_percent_institutions", models.FloatField(blank=True, default=0, null=True)),
                ("short_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("short_percent_of_float", models.FloatField(blank=True, default=0, null=True)),
                ("beta", models.FloatField(blank=True, default=0, null=True)),
                ("category", models.FloatField(blank=True, default=0, null=True)),
                ("book_value", models.FloatField(blank=True, default=0, null=True)),
                ("price_to_book", models.FloatField(blank=True, default=0, null=True)),
                ("fund_family", models.FloatField(blank=True, default=0, null=True)),
                ("legal_type", models.FloatField(blank=True, default=0, null=True)),
                ("last_fiscal_year_end", models.DateTimeField(blank=True, null=True)),
                ("next_fiscal_year_end", models.DateTimeField(blank=True, null=True)),
                ("most_recent_quarter", models.DateTimeField(blank=True, null=True)),
                ("earnings_quarterly_growth", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_to_common", models.FloatField(blank=True, default=0, null=True)),
                ("trailing_eps", models.FloatField(blank=True, default=0, null=True)),
                ("forward_eps", models.FloatField(blank=True, default=0, null=True)),
                ("peg_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("last_split_factor", models.CharField(blank=True, max_length=10, null=True)),
                ("last_split_date", models.DateTimeField(blank=True, null=True)),
                ("enterprise_to_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("enterprise_to_ebitda", models.FloatField(blank=True, default=0, null=True)),
                ("week_change_52", models.FloatField(blank=True, default=0, null=True)),
                ("sand_p52_week_change", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
            ],
            options={
                "verbose_name": "Yahooquery Key stats",
                "verbose_name_plural": "Yahooquery Key stats",
                "db_table": "assets_companies_key_stats_yahooquery",
                "ordering": ["-date"],
                "get_latest_by": ["-date"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="IncomeStatementYFinance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("research_development", models.FloatField(blank=True, default=0, null=True)),
                ("effect_of_accounting_charges", models.FloatField(blank=True, default=0, null=True)),
                ("income_before_tax", models.FloatField(blank=True, default=0, null=True)),
                ("minority_interest", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("selling_general_administrative", models.FloatField(blank=True, default=0, null=True)),
                ("gross_profit", models.FloatField(blank=True, default=0, null=True)),
                ("ebit", models.FloatField(blank=True, default=0, null=True)),
                ("operating_income", models.FloatField(blank=True, default=0, null=True)),
                ("other_operating_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("interest_expense", models.FloatField(blank=True, default=0, null=True)),
                ("extraordinary_items", models.FloatField(blank=True, default=0, null=True)),
                ("non_recurring", models.FloatField(blank=True, default=0, null=True)),
                ("other_items", models.FloatField(blank=True, default=0, null=True)),
                ("income_tax_expense", models.FloatField(blank=True, default=0, null=True)),
                ("total_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("total_operating_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("cost_of_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("total_other_income_expense_net", models.FloatField(blank=True, default=0, null=True)),
                ("discontinued_operations", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_from_continuing_ops", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_applicable_to_common_shares", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "YFinance Income Statement",
                "verbose_name_plural": "YFinance Income Statements",
                "db_table": "assets_companies_income_statements_yfinance",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.y_finance.IncomeStatementYFinanceExtended,
            ),
        ),
        migrations.CreateModel(
            name="IncomeStatementYahooQuery",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("as_of_date", models.DateTimeField(blank=True, null=True)),
                ("period_type", models.CharField(blank=True, max_length=10, null=True)),
                ("currency_code", models.CharField(blank=True, max_length=10, null=True)),
                ("basic_average_shares", models.FloatField(blank=True, default=0, null=True)),
                ("basic_eps", models.FloatField(blank=True, default=0, null=True)),
                ("cost_of_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("diluted_average_shares", models.FloatField(blank=True, default=0, null=True)),
                ("diluted_eps", models.FloatField(blank=True, default=0, null=True)),
                ("diluted_ni_availto_com_stockholders", models.FloatField(blank=True, default=0, null=True)),
                ("ebit", models.FloatField(blank=True, default=0, null=True)),
                ("ebitda", models.FloatField(blank=True, default=0, null=True)),
                ("gross_profit", models.FloatField(blank=True, default=0, null=True)),
                ("interest_expense", models.FloatField(blank=True, default=0, null=True)),
                ("interest_expense_non_operating", models.FloatField(blank=True, default=0, null=True)),
                ("interest_income", models.FloatField(blank=True, default=0, null=True)),
                ("interest_income_non_operating", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_common_stockholders", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_continuous_operations", models.FloatField(blank=True, default=0, null=True)),
                (
                    "net_income_from_continuing_and_discontinued_operation",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                (
                    "net_income_from_continuing_operation_net_minority_interest",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                ("net_income_including_noncontrolling_interests", models.FloatField(blank=True, default=0, null=True)),
                ("net_interest_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_non_operating_interest_income_expense", models.FloatField(blank=True, default=0, null=True)),
                ("normalized_ebitda", models.FloatField(blank=True, default=0, null=True)),
                ("normalized_income", models.FloatField(blank=True, default=0, null=True)),
                ("operating_expense", models.FloatField(blank=True, default=0, null=True)),
                ("operating_income", models.FloatField(blank=True, default=0, null=True)),
                ("operating_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("other_income_expense", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_operating_income_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("pretax_income", models.FloatField(blank=True, default=0, null=True)),
                ("reconciled_cost_of_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("reconciled_depreciation", models.FloatField(blank=True, default=0, null=True)),
                ("research_and_development", models.FloatField(blank=True, default=0, null=True)),
                ("selling_general_and_administration", models.FloatField(blank=True, default=0, null=True)),
                ("tax_effect_of_unusual_items", models.FloatField(blank=True, default=0, null=True)),
                ("tax_provision", models.FloatField(blank=True, default=0, null=True)),
                ("tax_rate_for_calcs", models.FloatField(blank=True, default=0, null=True)),
                ("total_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("total_operating_income_as_reported", models.FloatField(blank=True, default=0, null=True)),
                ("total_revenue", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Yahooquery Income Statement",
                "verbose_name_plural": "Yahooquery Income Statements",
                "db_table": "assets_companies_income_statements_yahooquery",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.yahoo_query.IncomeStatementYahooQueryExtended,
            ),
        ),
        migrations.CreateModel(
            name="IncomeStatementFinprep",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("accepted_date", models.DateTimeField(blank=True, null=True)),
                ("filling_date", models.DateField(blank=True, null=True)),
                ("final_link", models.CharField(blank=True, max_length=1000, null=True)),
                ("link", models.CharField(blank=True, max_length=1000, null=True)),
                ("calendar_year", models.IntegerField(blank=True, null=True)),
                ("cik", models.CharField(blank=True, max_length=100, null=True)),
                ("symbol", models.CharField(blank=True, max_length=20, null=True)),
                ("cost_and_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("cost_of_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_and_amortization", models.FloatField(blank=True, default=0, null=True)),
                ("ebitda", models.FloatField(blank=True, default=0, null=True)),
                ("ebitdaratio", models.FloatField(blank=True, default=0, null=True)),
                ("eps", models.FloatField(blank=True, default=0, null=True)),
                ("epsdiluted", models.FloatField(blank=True, default=0, null=True)),
                ("general_and_administrative_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("gross_profit", models.FloatField(blank=True, default=0, null=True)),
                ("gross_profit_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("income_before_tax", models.FloatField(blank=True, default=0, null=True)),
                ("income_before_tax_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("income_tax_expense", models.FloatField(blank=True, default=0, null=True)),
                ("interest_expense", models.FloatField(blank=True, default=0, null=True)),
                ("interest_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("operating_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("operating_income", models.FloatField(blank=True, default=0, null=True)),
                ("operating_income_ratio", models.FloatField(blank=True, default=0, null=True)),
                ("other_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("research_and_development_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("revenue", models.FloatField(blank=True, default=0, null=True)),
                ("selling_and_marketing_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("selling_general_and_administrative_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("total_other_income_expenses_net", models.FloatField(blank=True, default=0, null=True)),
                ("weighted_average_shs_out", models.FloatField(blank=True, default=0, null=True)),
                ("weighted_average_shs_out_dil", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Finprep Income Statement",
                "verbose_name_plural": "Finprep Income Statements",
                "db_table": "assets_companies_income_statements_finprep",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.finprep.IncomeStatementFinprepExtended,
            ),
        ),
        migrations.CreateModel(
            name="IncomeStatement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("revenue", models.FloatField(blank=True, default=0, null=True)),
                ("cost_of_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("gross_profit", models.FloatField(blank=True, default=0, null=True)),
                ("rd_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("general_administrative_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("selling_marketing_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("sga_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("other_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("operating_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("cost_and_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("interest_expense", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_amortization", models.FloatField(blank=True, default=0, null=True)),
                ("ebitda", models.FloatField(blank=True, default=0, null=True)),
                ("operating_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_total_other_income_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("income_before_tax", models.FloatField(blank=True, default=0, null=True)),
                ("income_tax_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("weighted_average_shares_outstanding", models.FloatField(blank=True, default=0, null=True)),
                ("weighted_average_diluated_shares_outstanding", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inc_statements",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Income Statement",
                "verbose_name_plural": "Income Statements",
                "db_table": "assets_companies_income_statements",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="FreeCashFlowRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("fcf_equity", models.FloatField(blank=True, default=0, null=True)),
                ("unlevered_fcf", models.FloatField(blank=True, default=0, null=True)),
                ("unlevered_fcf_ebit", models.FloatField(blank=True, default=0, null=True)),
                ("owners_earnings", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="fcf_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Free cash flow Ratio",
                "verbose_name_plural": "Free cash flow Ratios",
                "db_table": "assets_companies_freecashflow_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="Exchange",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("exchange_ticker", models.CharField(blank=True, max_length=30, null=True)),
                ("exchange", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "data_source",
                    models.CharField(
                        choices=[
                            ("finprep", "Finprep"),
                            ("finnhub", "Finnhub"),
                            ("y_finance", "YFinance"),
                            ("yahooquery", "Yahooquery"),
                            ("yahoo_finance", "Yahoo Finance"),
                        ],
                        default="finprep",
                        max_length=100,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="countries.country"
                    ),
                ),
                (
                    "main_org",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="empresas.exchangeorganisation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Exchange",
                "verbose_name_plural": "Exchanges",
                "db_table": "assets_exchanges",
                "ordering": ["-exchange_ticker"],
            },
        ),
        migrations.CreateModel(
            name="EnterpriseValueRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("market_cap", models.FloatField(blank=True, default=0, null=True)),
                ("enterprise_value", models.FloatField(blank=True, default=0, null=True)),
                ("ev_fcf", models.FloatField(blank=True, default=0, null=True)),
                ("ev_operating_cf", models.FloatField(blank=True, default=0, null=True)),
                ("ev_sales", models.FloatField(blank=True, default=0, null=True)),
                ("company_equity_multiplier", models.FloatField(blank=True, default=0, null=True)),
                ("ev_multiple", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ev_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Enterprise Value",
                "verbose_name_plural": "Enterprise Values",
                "db_table": "assets_companies_enterprise_value_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="EficiencyRatio",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("asset_turnover", models.FloatField(blank=True, default=0, null=True)),
                ("inventory_turnover", models.FloatField(blank=True, default=0, null=True)),
                ("fixed_asset_turnover", models.FloatField(blank=True, default=0, null=True)),
                ("payables_turnover", models.FloatField(blank=True, default=0, null=True)),
                ("cash_conversion_cycle", models.FloatField(blank=True, default=0, null=True)),
                ("days_inventory_outstanding", models.FloatField(blank=True, default=0, null=True)),
                ("days_payables_outstanding", models.FloatField(blank=True, default=0, null=True)),
                ("days_sales_outstanding", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_to_operating_cf", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cycle", models.FloatField(blank=True, default=0, null=True)),
                ("cash_conversion_ratio", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="efficiency_ratios",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Efficiency Ratio",
                "verbose_name_plural": "Efficiency Ratios",
                "db_table": "assets_companies_eficiency_ratios",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="CompanyUpdateLog",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateTimeField(blank=True, null=True)),
                ("where", models.CharField(max_length=250)),
                ("had_error", models.BooleanField(default=False)),
                ("error_message", models.TextField(default="", null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="company_log_historial",
                        to="empresas.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Logs",
                "verbose_name_plural": "Logs",
                "db_table": "assets_companies_updates_logs",
                "ordering": ["-date"],
                "get_latest_by": "date",
            },
        ),
        migrations.CreateModel(
            name="CompanyStockPrice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateTimeField(auto_now=True)),
                ("price", models.FloatField(blank=True, default=0, null=True)),
                (
                    "data_source",
                    models.CharField(
                        choices=[
                            ("finprep", "Finprep"),
                            ("finnhub", "Finnhub"),
                            ("y_finance", "YFinance"),
                            ("yahooquery", "Yahooquery"),
                            ("yahoo_finance", "Yahoo Finance"),
                        ],
                        default="y_finance",
                        max_length=100,
                    ),
                ),
                (
                    "company_related",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_prices",
                        to="empresas.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock price",
                "verbose_name_plural": "Stock prices",
                "db_table": "assets_companies_stock_prices",
                "ordering": ["-date"],
                "get_latest_by": "date",
            },
        ),
        migrations.CreateModel(
            name="CompanyGrowth",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("revenue_growth", models.FloatField(blank=True, default=0, null=True)),
                ("cost_revenue_growth", models.FloatField(blank=True, default=0, null=True)),
                ("operating_expenses_growth", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_growth", models.FloatField(blank=True, default=0, null=True)),
                ("shares_buyback", models.FloatField(blank=True, default=0, null=True)),
                ("eps_growth", models.FloatField(blank=True, default=0, null=True)),
                ("fcf_growth", models.FloatField(blank=True, default=0, null=True)),
                ("owners_earnings_growth", models.FloatField(blank=True, default=0, null=True)),
                ("capex_growth", models.FloatField(blank=True, default=0, null=True)),
                ("rd_expenses_growth", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="growth_rates",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Company growth",
                "verbose_name_plural": "Companies growth",
                "db_table": "assets_companies_growths",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.AddField(
            model_name="company",
            name="exchange",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="companies",
                to="empresas.exchange",
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="industry",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="industries_sectors.industry"
            ),
        ),
        migrations.AddField(
            model_name="company",
            name="sector",
            field=models.ForeignKey(
                blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="industries_sectors.sector"
            ),
        ),
        migrations.CreateModel(
            name="CashflowStatementYFinance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("investments", models.FloatField(blank=True, default=0, null=True)),
                ("change_to_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_cashflows_from_investing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("net_borrowings", models.FloatField(blank=True, default=0, null=True)),
                ("total_cash_from_financing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("change_to_operating_activities", models.FloatField(blank=True, default=0, null=True)),
                ("issuance_of_stock", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_cash", models.FloatField(blank=True, default=0, null=True)),
                ("repurchase_of_stock", models.FloatField(blank=True, default=0, null=True)),
                ("effect_of_exchange_rate", models.FloatField(blank=True, default=0, null=True)),
                ("total_cash_from_operating_activities", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation", models.FloatField(blank=True, default=0, null=True)),
                ("other_cashflows_from_investing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("dividends_paid", models.FloatField(blank=True, default=0, null=True)),
                ("change_to_inventory", models.FloatField(blank=True, default=0, null=True)),
                ("change_to_account_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("other_cashflows_from_financing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("change_to_netincome", models.FloatField(blank=True, default=0, null=True)),
                ("capital_expenditures", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "YFinance Cash flow Statement",
                "verbose_name_plural": "YFinance Cash flow Statements",
                "db_table": "assets_companies_cashflow_statements_yfinance",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.y_finance.CashflowStatementYFinanceExtended,
            ),
        ),
        migrations.CreateModel(
            name="CashflowStatementYahooQuery",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("as_of_date", models.DateTimeField(blank=True, null=True)),
                ("period_type", models.CharField(blank=True, max_length=10, null=True)),
                ("currency_code", models.CharField(blank=True, max_length=10, null=True)),
                ("beginning_cash_position", models.FloatField(blank=True, default=0, null=True)),
                ("capital_expenditure", models.FloatField(blank=True, default=0, null=True)),
                ("cash_dividends_paid", models.FloatField(blank=True, default=0, null=True)),
                ("cash_flow_from_continuing_financing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("cash_flow_from_continuing_investing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("cash_flow_from_continuing_operating_activities", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_account_payable", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_cash_supplemental_as_reported", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_inventory", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_other_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_other_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_other_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_payable", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_payables_and_accrued_expense", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("changes_in_account_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("changes_in_cash", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_dividend_paid", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_issuance", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_payments", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_income_tax", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_tax", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_amortization_depletion", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_and_amortization", models.FloatField(blank=True, default=0, null=True)),
                ("end_cash_position", models.FloatField(blank=True, default=0, null=True)),
                ("financing_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("free_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("income_tax_paid_supplemental_data", models.FloatField(blank=True, default=0, null=True)),
                ("interest_paid_supplemental_data", models.FloatField(blank=True, default=0, null=True)),
                ("investing_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("issuance_of_capital_stock", models.FloatField(blank=True, default=0, null=True)),
                ("issuance_of_debt", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt_issuance", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt_payments", models.FloatField(blank=True, default=0, null=True)),
                ("net_business_purchase_and_sale", models.FloatField(blank=True, default=0, null=True)),
                ("net_common_stock_issuance", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("net_income_from_continuing_operations", models.FloatField(blank=True, default=0, null=True)),
                ("net_investment_purchase_and_sale", models.FloatField(blank=True, default=0, null=True)),
                ("net_issuance_payments_of_debt", models.FloatField(blank=True, default=0, null=True)),
                ("net_long_term_debt_issuance", models.FloatField(blank=True, default=0, null=True)),
                ("net_other_financing_charges", models.FloatField(blank=True, default=0, null=True)),
                ("net_other_investing_changes", models.FloatField(blank=True, default=0, null=True)),
                ("net_ppe_purchase_and_sale", models.FloatField(blank=True, default=0, null=True)),
                ("net_short_term_debt_issuance", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_cash_items", models.FloatField(blank=True, default=0, null=True)),
                ("purchase_of_business", models.FloatField(blank=True, default=0, null=True)),
                ("purchase_of_investment", models.FloatField(blank=True, default=0, null=True)),
                ("purchase_of_ppe", models.FloatField(blank=True, default=0, null=True)),
                ("repayment_of_debt", models.FloatField(blank=True, default=0, null=True)),
                ("repurchase_of_capital_stock", models.FloatField(blank=True, default=0, null=True)),
                ("sale_of_investment", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_debt_payments", models.FloatField(blank=True, default=0, null=True)),
                ("stock_based_compensation", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Yahooquery Cash flow Statement",
                "verbose_name_plural": "Yahooquery Cash flow Statements",
                "db_table": "assets_companies_cashflow_statements_yahooquery",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.yahoo_query.CashflowStatementYahooQueryExtended,
            ),
        ),
        migrations.CreateModel(
            name="CashflowStatementFinprep",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("accepted_date", models.DateTimeField(blank=True, null=True)),
                ("filling_date", models.DateField(blank=True, null=True)),
                ("final_link", models.CharField(blank=True, max_length=1000, null=True)),
                ("link", models.CharField(blank=True, max_length=1000, null=True)),
                ("calendar_year", models.IntegerField(blank=True, null=True)),
                ("cik", models.CharField(blank=True, max_length=100, null=True)),
                ("symbol", models.CharField(blank=True, max_length=20, null=True)),
                ("accounts_payables", models.FloatField(blank=True, default=0, null=True)),
                ("accounts_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("acquisitions_net", models.FloatField(blank=True, default=0, null=True)),
                ("capital_expenditure", models.FloatField(blank=True, default=0, null=True)),
                ("cash_at_beginning_of_period", models.FloatField(blank=True, default=0, null=True)),
                ("cash_at_end_of_period", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_issued", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_repurchased", models.FloatField(blank=True, default=0, null=True)),
                ("debt_repayment", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_income_tax", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_and_amortization", models.FloatField(blank=True, default=0, null=True)),
                ("dividends_paid", models.FloatField(blank=True, default=0, null=True)),
                ("effect_of_forex_changes_on_cash", models.FloatField(blank=True, default=0, null=True)),
                ("free_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("investments_in_property_plant_and_equipment", models.FloatField(blank=True, default=0, null=True)),
                ("net_cash_provided_by_operating_activities", models.FloatField(blank=True, default=0, null=True)),
                ("net_cash_used_for_investing_activites", models.FloatField(blank=True, default=0, null=True)),
                ("net_cash_used_provided_by_financing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("net_change_in_cash", models.FloatField(blank=True, default=0, null=True)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cash_flow", models.FloatField(blank=True, default=0, null=True)),
                ("other_financing_activites", models.FloatField(blank=True, default=0, null=True)),
                ("other_investing_activites", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_cash_items", models.FloatField(blank=True, default=0, null=True)),
                ("other_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("purchases_of_investments", models.FloatField(blank=True, default=0, null=True)),
                ("sales_maturities_of_investments", models.FloatField(blank=True, default=0, null=True)),
                ("stock_based_compensation", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Finprep Cash flow Statement",
                "verbose_name_plural": "Finprep Cash flow Statements",
                "db_table": "assets_companies_cashflow_statements_finprep",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.finprep.CashflowStatementFinprepExtended,
            ),
        ),
        migrations.CreateModel(
            name="CashflowStatement",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("net_income", models.FloatField(blank=True, default=0, null=True)),
                ("depreciation_amortization", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_income_tax", models.FloatField(blank=True, default=0, null=True)),
                ("stock_based_compesation", models.FloatField(blank=True, default=0, null=True)),
                ("change_in_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("accounts_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("accounts_payable", models.FloatField(blank=True, default=0, null=True)),
                ("other_working_capital", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_cash_items", models.FloatField(blank=True, default=0, null=True)),
                ("operating_activities_cf", models.FloatField(blank=True, default=0, null=True)),
                ("investments_property_plant_equipment", models.FloatField(blank=True, default=0, null=True)),
                ("acquisitions_net", models.FloatField(blank=True, default=0, null=True)),
                ("purchases_investments", models.FloatField(blank=True, default=0, null=True)),
                ("sales_maturities_investments", models.FloatField(blank=True, default=0, null=True)),
                ("other_investing_activites", models.FloatField(blank=True, default=0, null=True)),
                ("investing_activities_cf", models.FloatField(blank=True, default=0, null=True)),
                ("debt_repayment", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_issued", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_repurchased", models.FloatField(blank=True, default=0, null=True)),
                ("dividends_paid", models.FloatField(blank=True, default=0, null=True)),
                ("other_financing_activities", models.FloatField(blank=True, default=0, null=True)),
                ("financing_activities_cf", models.FloatField(blank=True, default=0, null=True)),
                ("effect_forex_exchange", models.FloatField(blank=True, default=0, null=True)),
                ("net_change_cash", models.FloatField(blank=True, default=0, null=True)),
                ("cash_end_period", models.FloatField(blank=True, default=0, null=True)),
                ("cash_beginning_period", models.FloatField(blank=True, default=0, null=True)),
                ("operating_cf", models.FloatField(blank=True, default=0, null=True)),
                ("capex", models.FloatField(blank=True, default=0, null=True)),
                ("fcf", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cf_statements",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Cash flow Statement",
                "verbose_name_plural": "Cash flow Statements",
                "db_table": "assets_companies_cashflow_statements",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="BalanceSheetYFinance",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("intangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_liab", models.FloatField(blank=True, default=0, null=True)),
                ("total_stockholder_equity", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_liab", models.FloatField(blank=True, default=0, null=True)),
                ("total_assets", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("other_liab", models.FloatField(blank=True, default=0, null=True)),
                ("good_will", models.FloatField(blank=True, default=0, null=True)),
                ("gains_losses_not_affecting_retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("other_assets", models.FloatField(blank=True, default=0, null=True)),
                ("cash", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_long_term_asset_charges", models.FloatField(blank=True, default=0, null=True)),
                ("short_long_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("other_stockholder_equity", models.FloatField(blank=True, default=0, null=True)),
                ("property_plant_equipment", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("net_tangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("net_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("accounts_payable", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "YFinance Balance Sheet",
                "verbose_name_plural": "YFinance Balance Sheets",
                "db_table": "assets_companies_balance_sheet_statements_yfinance",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.y_finance.BalanceSheetYFinanceExtended,
            ),
        ),
        migrations.CreateModel(
            name="BalanceSheetYahooQuery",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("financials", models.JSONField(default=dict)),
                ("as_of_date", models.DateTimeField(blank=True, null=True)),
                ("period_type", models.CharField(blank=True, max_length=10, null=True)),
                ("currency_code", models.CharField(blank=True, max_length=10, null=True)),
                ("accounts_payable", models.FloatField(blank=True, default=0, null=True)),
                ("accounts_receivable", models.FloatField(blank=True, default=0, null=True)),
                ("accumulated_depreciation", models.FloatField(blank=True, default=0, null=True)),
                ("available_for_sale_securities", models.FloatField(blank=True, default=0, null=True)),
                ("capital_stock", models.FloatField(blank=True, default=0, null=True)),
                ("cash_and_cash_equivalents", models.FloatField(blank=True, default=0, null=True)),
                (
                    "cash_cash_equivalents_and_short_term_investments",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                ("cash_equivalents", models.FloatField(blank=True, default=0, null=True)),
                ("cash_financial", models.FloatField(blank=True, default=0, null=True)),
                ("commercial_paper", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock_equity", models.FloatField(blank=True, default=0, null=True)),
                ("current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("current_debt", models.FloatField(blank=True, default=0, null=True)),
                ("current_debt_and_capital_lease_obligation", models.FloatField(blank=True, default=0, null=True)),
                ("current_deferred_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("current_deferred_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("gains_losses_not_affecting_retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("gross_ppe", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("invested_capital", models.FloatField(blank=True, default=0, null=True)),
                ("investmentin_financial_assets", models.FloatField(blank=True, default=0, null=True)),
                ("investments_and_advances", models.FloatField(blank=True, default=0, null=True)),
                ("land_and_improvements", models.FloatField(blank=True, default=0, null=True)),
                ("leases", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt_and_capital_lease_obligation", models.FloatField(blank=True, default=0, null=True)),
                ("machinery_furniture_equipment", models.FloatField(blank=True, default=0, null=True)),
                ("net_debt", models.FloatField(blank=True, default=0, null=True)),
                ("net_ppe", models.FloatField(blank=True, default=0, null=True)),
                ("net_tangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("non_current_deferred_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("non_current_deferred_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("non_current_deferred_taxes_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("ordinary_shares_number", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_borrowings", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("other_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("other_short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("payables", models.FloatField(blank=True, default=0, null=True)),
                ("payables_and_accrued_expenses", models.FloatField(blank=True, default=0, null=True)),
                ("properties", models.FloatField(blank=True, default=0, null=True)),
                ("receivables", models.FloatField(blank=True, default=0, null=True)),
                ("retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("share_issued", models.FloatField(blank=True, default=0, null=True)),
                ("stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                ("tangible_book_value", models.FloatField(blank=True, default=0, null=True)),
                ("total_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_capitalization", models.FloatField(blank=True, default=0, null=True)),
                ("total_debt", models.FloatField(blank=True, default=0, null=True)),
                ("total_equity_gross_minority_interest", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities_net_minority_interest", models.FloatField(blank=True, default=0, null=True)),
                ("total_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                (
                    "total_non_current_liabilities_net_minority_interest",
                    models.FloatField(blank=True, default=0, null=True),
                ),
                ("tradeand_other_payables_non_current", models.FloatField(blank=True, default=0, null=True)),
                ("working_capital", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Yahooquery Balance Sheet",
                "verbose_name_plural": "Yahooquery Balance Sheets",
                "db_table": "assets_companies_balance_sheet_statements_yahooquery",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.yahoo_query.BalanceSheetYahooQueryExtended,
            ),
        ),
        migrations.CreateModel(
            name="BalanceSheetFinprep",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("accepted_date", models.DateTimeField(blank=True, null=True)),
                ("filling_date", models.DateField(blank=True, null=True)),
                ("final_link", models.CharField(blank=True, max_length=1000, null=True)),
                ("link", models.CharField(blank=True, max_length=1000, null=True)),
                ("calendar_year", models.IntegerField(blank=True, null=True)),
                ("cik", models.CharField(blank=True, max_length=100, null=True)),
                ("symbol", models.CharField(blank=True, max_length=20, null=True)),
                ("account_payables", models.FloatField(blank=True, default=0, null=True)),
                ("accumulated_other_comprehensive_income_loss", models.FloatField(blank=True, default=0, null=True)),
                ("capital_lease_obligations", models.FloatField(blank=True, default=0, null=True)),
                ("cash_and_cash_equivalents", models.FloatField(blank=True, default=0, null=True)),
                ("cash_and_short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("common_stock", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_revenue_non_current", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_tax_liabilities_non_current", models.FloatField(blank=True, default=0, null=True)),
                ("goodwill", models.FloatField(blank=True, default=0, null=True)),
                ("goodwill_and_intangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("intangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("minority_interest", models.FloatField(blank=True, default=0, null=True)),
                ("net_debt", models.FloatField(blank=True, default=0, null=True)),
                ("net_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("other_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("other_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("othertotal_stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                ("preferred_stock", models.FloatField(blank=True, default=0, null=True)),
                ("property_plant_equipment_net", models.FloatField(blank=True, default=0, null=True)),
                ("retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("tax_assets", models.FloatField(blank=True, default=0, null=True)),
                ("tax_payables", models.FloatField(blank=True, default=0, null=True)),
                ("total_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_debt", models.FloatField(blank=True, default=0, null=True)),
                ("total_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_investments", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities_and_stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities_and_total_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_non_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="empresas.company"
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Finprep Balance Sheet",
                "verbose_name_plural": "Finprep Balance Sheets",
                "db_table": "assets_companies_balance_sheet_statements_finprep",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(
                models.Model,
                src.general.mixins.BaseToAllMixin,
                src.empresas.extensions.finprep.BalanceSheetFinprepExtended,
            ),
        ),
        migrations.CreateModel(
            name="BalanceSheet",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.IntegerField(default=0)),
                ("year", models.DateField(blank=True, null=True)),
                ("is_ttm", models.BooleanField(default=False)),
                ("from_average", models.BooleanField(default=False)),
                ("cash_and_cash_equivalents", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("cash_and_short_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("net_receivables", models.FloatField(blank=True, default=0, null=True)),
                ("inventory", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("property_plant_equipment", models.FloatField(blank=True, default=0, null=True)),
                ("goodwill", models.FloatField(blank=True, default=0, null=True)),
                ("intangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("goodwill_and_intangible_assets", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_investments", models.FloatField(blank=True, default=0, null=True)),
                ("tax_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_non_current_assets", models.FloatField(blank=True, default=0, null=True)),
                ("other_assets", models.FloatField(blank=True, default=0, null=True)),
                ("total_assets", models.FloatField(blank=True, default=0, null=True)),
                ("account_payables", models.FloatField(blank=True, default=0, null=True)),
                ("short_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("tax_payables", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_revenue", models.FloatField(blank=True, default=0, null=True)),
                ("other_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("long_term_debt", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_revenue_non_current", models.FloatField(blank=True, default=0, null=True)),
                ("deferred_tax_liabilities_non_current", models.FloatField(blank=True, default=0, null=True)),
                ("other_non_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_non_current_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("other_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities", models.FloatField(blank=True, default=0, null=True)),
                ("common_stocks", models.FloatField(blank=True, default=0, null=True)),
                ("retained_earnings", models.FloatField(blank=True, default=0, null=True)),
                ("accumulated_other_comprehensive_income_loss", models.FloatField(blank=True, default=0, null=True)),
                ("othertotal_stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_stockholders_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_liabilities_and_total_equity", models.FloatField(blank=True, default=0, null=True)),
                ("total_investments", models.FloatField(blank=True, default=0, null=True)),
                ("total_debt", models.FloatField(blank=True, default=0, null=True)),
                ("net_debt", models.FloatField(blank=True, default=0, null=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="balance_sheets",
                        to="empresas.company",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="periods.period"
                    ),
                ),
                (
                    "reported_currency",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="currencies.currency"
                    ),
                ),
            ],
            options={
                "verbose_name": "Balance Sheet",
                "verbose_name_plural": "Balance Sheets",
                "db_table": "assets_companies_balance_sheet_statements",
                "ordering": ["-date", "period"],
                "get_latest_by": ["-date", "period"],
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name="CompanyFinnhubProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("empresas.company",),
        ),
        migrations.CreateModel(
            name="CompanyFinprepProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("empresas.company",),
        ),
        migrations.CreateModel(
            name="CompanyStatementsProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("empresas.company",),
        ),
        migrations.CreateModel(
            name="CompanyYahooQueryProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("empresas.company",),
        ),
        migrations.CreateModel(
            name="CompanyYFinanceProxy",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("empresas.company",),
        ),
    ]
