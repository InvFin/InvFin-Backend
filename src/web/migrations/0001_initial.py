# Generated by Django 3.2.15 on 2022-12-31 14:33

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import src.emailing.extensions
import src.escritos.abstracts
import src.general.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('classifications', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('content_creation', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('promotions', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Roadmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=800, null=True)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('checkings', models.JSONField(default=src.escritos.abstracts.default_dict)),
                ('total_votes', models.IntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('times_shared', models.PositiveIntegerField(default=0)),
                ('content', ckeditor.fields.RichTextField()),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('pending', 'Pending'), ('doing', 'Doing'), ('testing', 'Testing')], default='pending', max_length=30)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='classifications.category')),
                ('downvotes', models.ManyToManyField(blank=True, related_name='user_downvote_roadmap', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank=True, to='classifications.Tag')),
                ('upvotes', models.ManyToManyField(blank=True, related_name='user_upvote_roadmap', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Roadmap',
                'db_table': 'website_roadmap',
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin, src.general.mixins.CommentsMixin, src.general.mixins.VotesMixin, src.general.mixins.CheckingsMixin),
        ),
        migrations.CreateModel(
            name='WebsiteEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500)),
                ('sent', models.BooleanField(default=False)),
                ('date_to_send', models.DateTimeField(blank=True, null=True)),
                ('call_to_action', models.CharField(blank=True, max_length=500, null=True)),
                ('call_to_action_url', models.CharField(blank=True, max_length=500, null=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('whom_to_send', models.CharField(choices=[('all', 'All'), ('campaign_related', 'Campaign related'), ('selected', 'Selected')], default='all', max_length=800)),
                ('object_id', models.PositiveBigIntegerField(blank=True, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emails', to='promotions.campaign')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('default_content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content_creation.defaultcontent')),
                ('default_title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='content_creation.defaulttilte')),
                ('title_emojis', models.ManyToManyField(blank=True, to='content_creation.Emoji')),
                ('users_selected', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Website emails',
                'db_table': 'website_emails',
                'ordering': ['-id'],
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin, src.emailing.extensions.EmailExtension),
        ),
        migrations.CreateModel(
            name='WebsiteLegalPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=800)),
                ('slug', models.SlugField(blank=True, max_length=800, null=True)),
                ('content', ckeditor.fields.RichTextField()),
            ],
            options={
                'verbose_name': 'Legal website page',
                'db_table': 'website_pages_legals',
                'ordering': ['-id'],
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='WebsiteEmailTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_sent', models.DateTimeField(auto_now_add=True)),
                ('opened', models.BooleanField(default=False)),
                ('date_opened', models.DateTimeField(default=django.utils.timezone.now)),
                ('email_related', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='email_related', to='web.websiteemail')),
                ('sent_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email counting',
                'db_table': 'website_emails_track',
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
        migrations.CreateModel(
            name='RoadmapComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('content_related', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_related', to='web.roadmap')),
            ],
            options={
                'verbose_name': "Roadmap's comment",
                'db_table': 'website_roadmap_comments',
            },
            bases=(models.Model, src.general.mixins.BaseToAllMixin),
        ),
    ]
